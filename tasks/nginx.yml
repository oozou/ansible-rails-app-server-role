---
- name: "install nginx"
  include_role:
    name: ansible-role-nginx
  vars:
    nginx_sites:
      default:
        - listen 80
        - server_name _
        - root "{% if ansible_os_family == 'FreeBSD' %}/usr/local/www/nginx-dist{% else %}/usr/share/nginx/html{% endif %}"
        - index index.html
    nginx_remove_sites:
      - 'default'
      - 'default.conf'

# remove old mime.types
- name: delete /etc/nginx/mime.types
  action: file path=/etc/nginx/mime.types state=absent

# replace with new mime.types
- name: upload nginx mime.types
  copy:  src=nginx.mime.types dest=/etc/nginx/mime.types

- name: delete default vhost
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: unlink default.conf
  file: path=/etc/nginx/sites-enabled/default.conf state=absent

- name: copy vhost
  template:  src="{{template_dir}}/nginx.host.conf.j2"
             dest="/etc/nginx/sites-available/{{app_name}}"

- name: copy nginx.conf
  template:  src="{{template_dir}}/nginx.conf.j2"
             dest="/etc/nginx/nginx.conf"

- name: unlink default vhost
  action: file path=/etc/nginx/sites-enabled/default
               state=absent

- name: unlink default.conf
  action: file dest=/etc/nginx/sites-enabled/default.conf
               state=absent

- name: symlink vhost
  file: dest=/etc/nginx/sites-enabled/{{app_name}} src=/etc/nginx/sites-available/{{app_name}} state=link

- name: Create share/config
  file: dest={{app_shared_dir}}/config state=directory owner={{deployer.username}} group={{deployer.username}}

# restart nginx
- service:
    name: nginx
    state: restarted
